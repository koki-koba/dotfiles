[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'sudar/vim-arduino-syntax'

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'

[[plugins]]
repo = 'Townk/Vim-autoclose'

[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]] #ddc auto complete
repo = 'Shougo/ddc.vim'

[[plugins]] #popup menu
repo = 'Shougo/pum.vim'

[[plugins]] #カーソル周辺の単語を補完
repo = 'Shougo/ddc-around'

[[plugins]]# ファイル名で補完
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'BufEnter'
 hook_source = '''
 lua << EOF
 local nvim_lsp = require('lspconfig')
 local on_attach = function (client, bufnr)
 local function buf_set_keymap(...) vim.api.nvim_buf_set_keymap(bufnr, ...) end
 local function buf_set_option(...) vim.api.nvim_buf_set_option(bufnr, ...) end

local opts = { noremap=true, silent=true }
 buf_set_keymap('n', 'gd', '<Cmd>lua vim.lsp.buf.definition()<CR>', opts)
 buf_set_keymap('n', 'K', '<Cmd>lua vim.lsp.buf.hover()<CR>', opts)
 buf_set_keymap('n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)
 buf_set_keymap('n', 'gs', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)
 buf_set_keymap('n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)
 buf_set_keymap('n', 'gx', '<cmd>lua vim.lsp.diagnostic.show_line_diagnostics()<CR>', opts)
 buf_set_keymap('n', 'g[', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>', opts)
 buf_set_keymap('n', 'g]', '<cmd>lua vim.lsp.diagnostic.goto_next()<CR>', opts)
end

 local lsp_installer = require("nvim-lsp-installer")
 lsp_installer.on_server_ready(function(server)
   local opts = {}
   opts.on_attach = on_attach
   server:setup(opts)
   vim.cmd [[ do User LspAttachBuffers ]]
 end)
EOF
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'

[[plugins]]
 repo = 'matsui54/ddc-nvim-lsp-doc'
 on_source = 'ddc.vim'
 hook_source = '''
 let g:ddc_nvim_lsp_doc_config = {
     \ 'documentation': {
     \   'enable': v:true,
     \   'border': 'single',
     \   'maxWidth': 100,
     \   'maxHeight': 60,
     \   'winblend': 15,
     \ },
     \ 'signature': {
     \   'border': 'single',
     \   'maxHeight': 10,
     \   'winblend': 15,
     \ },
     \ }
 call ddc_nvim_lsp_doc#enable()
'''
